/****************************************************************************
** Meta object code from reading C++ file 'EntityMapperTest.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'EntityMapperTest.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_DummyObject_t {
    QByteArrayData data[4];
    char stringdata0[21];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DummyObject_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DummyObject_t qt_meta_stringdata_DummyObject = {
    {
QT_MOC_LITERAL(0, 0, 11), // "DummyObject"
QT_MOC_LITERAL(1, 12, 0), // ""
QT_MOC_LITERAL(2, 13, 2), // "id"
QT_MOC_LITERAL(3, 16, 4) // "name"

    },
    "DummyObject\0\0id\0name"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DummyObject[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       2,   15, // properties
       0,    0, // enums/sets
       1,   21, // constructors
       0,       // flags
       0,       // signalCount

 // constructors: parameters
    0x80000000 | 1,

 // properties: name, type, flags
       2, QMetaType::Int, 0x00095103,
       3, QMetaType::QString, 0x00095103,

 // constructors: name, argc, parameters, tag, flags
       0,    0,   14,    1, 0x0e /* Public */,

       0        // eod
};

void DummyObject::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::CreateInstance) {
        switch (_id) {
        case 0: { DummyObject *_r = new DummyObject();
            if (_a[0]) *reinterpret_cast<QObject**>(_a[0]) = _r; } break;
        default: break;
        }
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        DummyObject *_t = static_cast<DummyObject *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->getId(); break;
        case 1: *reinterpret_cast< QString*>(_v) = _t->getName(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        DummyObject *_t = static_cast<DummyObject *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setId(*reinterpret_cast< int*>(_v)); break;
        case 1: _t->setName(*reinterpret_cast< QString*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_o);
}

const QMetaObject DummyObject::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_DummyObject.data,
      qt_meta_data_DummyObject,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *DummyObject::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DummyObject::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_DummyObject.stringdata0))
        return static_cast<void*>(const_cast< DummyObject*>(this));
    return QObject::qt_metacast(_clname);
}

int DummyObject::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    
#ifndef QT_NO_PROPERTIES
   if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 2;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 2;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
struct qt_meta_stringdata_DummyObjectWithoutStdCtor_t {
    QByteArrayData data[2];
    char stringdata0[29];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_DummyObjectWithoutStdCtor_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_DummyObjectWithoutStdCtor_t qt_meta_stringdata_DummyObjectWithoutStdCtor = {
    {
QT_MOC_LITERAL(0, 0, 25), // "DummyObjectWithoutStdCtor"
QT_MOC_LITERAL(1, 26, 2) // "id"

    },
    "DummyObjectWithoutStdCtor\0id"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_DummyObjectWithoutStdCtor[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       1,   14, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // properties: name, type, flags
       1, QMetaType::Int, 0x00095103,

       0        // eod
};

void DummyObjectWithoutStdCtor::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{

#ifndef QT_NO_PROPERTIES
    if (_c == QMetaObject::ReadProperty) {
        DummyObjectWithoutStdCtor *_t = static_cast<DummyObjectWithoutStdCtor *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< int*>(_v) = _t->getId(); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
        DummyObjectWithoutStdCtor *_t = static_cast<DummyObjectWithoutStdCtor *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: _t->setId(*reinterpret_cast< int*>(_v)); break;
        default: break;
        }
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject DummyObjectWithoutStdCtor::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_DummyObjectWithoutStdCtor.data,
      qt_meta_data_DummyObjectWithoutStdCtor,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *DummyObjectWithoutStdCtor::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *DummyObjectWithoutStdCtor::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_DummyObjectWithoutStdCtor.stringdata0))
        return static_cast<void*>(const_cast< DummyObjectWithoutStdCtor*>(this));
    return QObject::qt_metacast(_clname);
}

int DummyObjectWithoutStdCtor::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    
#ifndef QT_NO_PROPERTIES
   if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 1;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 1;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}
struct qt_meta_stringdata_EntityMapperTest_t {
    QByteArrayData data[10];
    char stringdata0[312];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_EntityMapperTest_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_EntityMapperTest_t qt_meta_stringdata_EntityMapperTest = {
    {
QT_MOC_LITERAL(0, 0, 16), // "EntityMapperTest"
QT_MOC_LITERAL(1, 17, 7), // "aMapper"
QT_MOC_LITERAL(2, 25, 17), // "EntityMapper::Ptr"
QT_MOC_LITERAL(3, 43, 0), // ""
QT_MOC_LITERAL(4, 44, 13), // "aDummyMapping"
QT_MOC_LITERAL(5, 58, 25), // "QMetaOrm::MetaEntity::Ptr"
QT_MOC_LITERAL(6, 84, 69), // "mapKeyToEntity_mappingExists_..."
QT_MOC_LITERAL(7, 154, 51), // "mapKeyToEntity_mappingDoesNot..."
QT_MOC_LITERAL(8, 206, 45), // "applyConverter_noConverterSpe..."
QT_MOC_LITERAL(9, 252, 59) // "applyConverter_converterSpeci..."

    },
    "EntityMapperTest\0aMapper\0EntityMapper::Ptr\0"
    "\0aDummyMapping\0QMetaOrm::MetaEntity::Ptr\0"
    "mapKeyToEntity_mappingExists_handlerCalledWithCorrectPropertyAndValue\0"
    "mapKeyToEntity_mappingDoesNotExist_handlerNotCalled\0"
    "applyConverter_noConverterSpecified_exception\0"
    "applyConverter_converterSpecified_valueTransformedCorrectly"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_EntityMapperTest[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   44,    3, 0x08 /* Private */,
       4,    0,   45,    3, 0x08 /* Private */,
       6,    0,   46,    3, 0x08 /* Private */,
       7,    0,   47,    3, 0x08 /* Private */,
       8,    0,   48,    3, 0x08 /* Private */,
       9,    0,   49,    3, 0x08 /* Private */,

 // slots: parameters
    0x80000000 | 2,
    0x80000000 | 5,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void EntityMapperTest::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        EntityMapperTest *_t = static_cast<EntityMapperTest *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: { EntityMapper::Ptr _r = _t->aMapper();
            if (_a[0]) *reinterpret_cast< EntityMapper::Ptr*>(_a[0]) = _r; }  break;
        case 1: { QMetaOrm::MetaEntity::Ptr _r = _t->aDummyMapping();
            if (_a[0]) *reinterpret_cast< QMetaOrm::MetaEntity::Ptr*>(_a[0]) = _r; }  break;
        case 2: _t->mapKeyToEntity_mappingExists_handlerCalledWithCorrectPropertyAndValue(); break;
        case 3: _t->mapKeyToEntity_mappingDoesNotExist_handlerNotCalled(); break;
        case 4: _t->applyConverter_noConverterSpecified_exception(); break;
        case 5: _t->applyConverter_converterSpecified_valueTransformedCorrectly(); break;
        default: ;
        }
    }
}

const QMetaObject EntityMapperTest::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_EntityMapperTest.data,
      qt_meta_data_EntityMapperTest,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *EntityMapperTest::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *EntityMapperTest::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_EntityMapperTest.stringdata0))
        return static_cast<void*>(const_cast< EntityMapperTest*>(this));
    return QObject::qt_metacast(_clname);
}

int EntityMapperTest::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 6)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 6;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
